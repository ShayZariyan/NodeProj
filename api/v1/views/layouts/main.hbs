<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>{{title}}</title>

  <!-- Bootstrap CSS + Icons -->
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet" />
  <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css" rel="stylesheet" />

  <style>
  html, body {
    margin: 0 !important;
    padding: 0 !important;
    border: none !important;
    background-color: #0f1115;
    color: #e1e1e1;
  }

  body {
    overflow-x: hidden;
  }

  .navbar {
    margin: 0 !important;
    padding: 0.5rem 0 !important;
    border: none !important;
    position: relative;
    z-index: 100;
  }

  .hero-section {
    position: relative;
    background: radial-gradient(ellipse at center, #1b2735 0%, #090a0f 100%);
    overflow: hidden;
    color: white;
    height: 80vh;
    display: flex;
    align-items: center;
    justify-content: center;
    margin-top: 0 !important;
    padding-top: 0 !important;
    border: none;
  }

  .laser-bg {
    position: absolute;
    width: 200%;
    height: 200%;
    top: -50%;
    left: -50%;
    background: repeating-linear-gradient(
      45deg,
      rgba(0, 255, 255, 0.05),
      rgba(0, 255, 255, 0.05) 1px,
      transparent 2px,
      transparent 10px
    );
    animation: moveLaser 12s linear infinite;
    z-index: 1;
  }

  @keyframes moveLaser {
    0% { transform: rotate(0deg) translateX(0); }
    100% { transform: rotate(360deg) translateX(100px); }
  }

  .hero-content {
    position: relative;
    z-index: 2;
    text-align: center;
  }

  main {
    flex: 1;
  }

  footer {
    background-color: #111;
  }

  .navbar-dark .navbar-nav .nav-link {
    color: #ccc;
  }

  .navbar-dark .navbar-nav .nav-link:hover {
    color: #fff;
  }

  .neon-input {
    background-color: #1a1c20;
    color: #00ffff;
    border: 1px solid #00ffff;
    box-shadow: 0 0 5px rgba(0, 255, 255, 0.3);
    transition: all 0.3s ease;
  }

  .neon-input:focus {
    background-color: #0d0f13;
    outline: none;
    border-color: #00ffff;
    box-shadow: 0 0 10px #00ffff;
  }

  .neon-btn {
    background-color: #00bcd4;
    border: none;
    color: #fff;
    box-shadow: 0 0 10px #00bcd4;
    transition: 0.3s ease;
  }

  .neon-btn:hover {
    background-color: #00e1ff;
    box-shadow: 0 0 15px #00e1ff;
    color: #000;
  }

  img.card-img-top {
    object-fit: contain !important;
    max-height: 220px !important;
    width: auto !important;
  }

  select[name="sort"] {
    width: 160px !important;
  }
</style>

</head>
<body class="d-flex flex-column min-vh-100">



  <!-- Navbar -->
  <nav class="navbar navbar-expand-lg navbar-dark bg-dark shadow-sm">
    <div class="container">
      <a class="navbar-brand" href="/">Welcome To Shay's Store</a>
      <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav">
        <span class="navbar-toggler-icon"></span>
      </button>
      <div class="collapse navbar-collapse" id="navbarNav">
        <ul class="navbar-nav ms-auto">
  <li class="nav-item"><a class="nav-link" href="/products">Products</a></li>
  <li class="nav-item"><a class="nav-link" href="/categories">Categories</a></li>

  <li class="nav-item">
    <a class="nav-link d-flex align-items-center" href="/cart">
      <i class="bi bi-cart3 me-1"></i> Cart
      {{#if cartCount}}
        <span class="badge bg-info text-dark ms-2">{{cartCount}}</span>
      {{/if}}
    </a>
  </li>

  {{#if user}}
  <li class="nav-item d-flex align-items-center gap-2">
    {{#if user.photos.[0].value}}
      <img src="{{user.photos.[0].value}}" alt="Avatar" class="rounded-circle" style="width: 32px; height: 32px; object-fit: cover;">
    {{else}}
      <span class="nav-link text-light fw-semibold m-0 p-0">{{user.fullname}}</span>
    {{/if}}
  </li>

  <li class="nav-item">
    <a class="nav-link" href="/auth/logout">
      <i class="bi bi-box-arrow-right"></i> Logout
    </a>
  </li>
{{else}}
  <li class="nav-item">
    <a class="nav-link" href="/auth">
      <i class="bi bi-box-arrow-in-right"></i> Login
    </a>
  </li>
  <li class="nav-item">
    <a class="nav-link" href="/auth/register">
      <i class="bi bi-person-plus"></i> Register
    </a>
  </li>
  <li class="nav-item d-flex gap-2 align-items-center">
  <a class="btn btn-outline-light btn-sm" href="/auth/google">
    <i class="bi bi-google me-1"></i> Google
  </a>
  <a class="btn btn-outline-light btn-sm" href="/auth/facebook">
    <i class="bi bi-facebook me-1"></i> Facebook
  </a>
</li>
{{/if}}
</ul>
      </div>
    </div>
  </nav>

  <!-- Page Content -->
  <main class="flex-grow-1 py-4">
  {{{body}}}
</main>



  <!-- Footer -->
  <footer class="text-center py-3 text-white">
    <p>&copy; Shay's Store</p>
  </footer>

  <!-- Chatbot Toggle Button -->
  <div id="chat-toggle-btn" class="bg-primary text-white position-fixed bottom-0 end-0 m-4 rounded-circle d-flex justify-content-center align-items-center shadow" style="width: 55px; height: 55px; font-size: 24px; cursor: pointer; z-index: 1000;">
    💬
  </div>

  <!-- Chatbot Widget -->
  <div id="chat-widget" class="d-none shadow position-fixed bottom-0 end-0 m-4" style="width: 360px; height: 500px; background-color: #1b1b1b; color: #fff; border-radius: 10px; overflow: hidden; z-index: 999;">
    <div class="bg-dark text-white px-3 py-2 d-flex justify-content-between align-items-center">
      <strong>Shopping Expert</strong>
      <span id="close-chat" style="cursor:pointer;">&times;</span>
    </div>
    <div id="chat-messages" class="px-3 py-2" style="height: 370px; overflow-y: auto; font-size: 14px;"></div>
    <div id="typing-indicator" class="px-3 py-1 text-muted small d-none">Searching For The Perfect Match</div>
    <div class="d-flex border-top">
      <input type="text" id="chat-input" class="form-control border-0 bg-dark text-light" placeholder="שאל אותי על מוצרים..." autocomplete="off" />
      <button id="voice-btn" class="btn btn-outline-secondary" title="דבר"><i class="bi bi-mic-fill"></i></button>
      <button id="send-btn" class="btn btn-primary">שלח</button>
    </div>
  </div>

  <script>
    const chatBtn = document.getElementById("chat-toggle-btn");
    const chatWidget = document.getElementById("chat-widget");
    const closeBtn = document.getElementById("close-chat");
    const inputField = document.getElementById("chat-input");
    const sendBtn = document.getElementById("send-btn");
    const chatBox = document.getElementById("chat-messages");
    const typingIndicator = document.getElementById("typing-indicator");
    const voiceBtn = document.getElementById("voice-btn");

    let chatOpen = false;

    if (sessionStorage.getItem("chatHistory")) {
      chatBox.innerHTML = sessionStorage.getItem("chatHistory");
    }

    const scrollToBottom = () => {
      chatBox.scrollTop = chatBox.scrollHeight;
    };

    const addMessage = (sender, text) => {
      const div = document.createElement("div");
      div.innerHTML = `<span class="fw-bold text-${sender === "user" ? "primary" : "secondary"}">${sender === "user" ? "אתה" : "אי"}:</span> ${text}`;
      chatBox.appendChild(div);
      scrollToBottom();
      sessionStorage.setItem("chatHistory", chatBox.innerHTML);
    };

    const addTypingEffect = async (text) => {
      const div = document.createElement("div");
      div.innerHTML = `<span class="fw-bold text-secondary">אי:</span> <span class="typing"></span>`;
      const span = div.querySelector(".typing");
      chatBox.appendChild(div);
      scrollToBottom();
      for (let i = 0; i < text.length; i++) {
        await new Promise(r => setTimeout(r, 10));
        span.textContent += text[i];
      }
      sessionStorage.setItem("chatHistory", chatBox.innerHTML);
    };

    const sendMessage = async () => {
      const message = inputField.value.trim();
      if (!message) return;

      addMessage("user", message);
      inputField.value = "";
      typingIndicator.classList.remove("d-none");

      try {
        const response = await fetch("/chat-ai", {
          method: "POST",
          headers: { "Content-Type": "application/json" },
          body: JSON.stringify({ question: message })
        });

        const data = await response.json();
        typingIndicator.classList.add("d-none");

        if (data.product) {
          const card = `
            <div class="card my-2 bg-dark text-light">
              <img src="/images/${data.product.image}" class="card-img-top" alt="${data.product.name}">
              <div class="card-body">
                <h6 class="card-title">${data.product.name}</h6>
                <p class="card-text">${data.product.description}</p>
                <p class="text-muted">מחיר: $${data.product.price}</p>
                <div class="d-flex gap-2">
                  <a href="/products/${data.product._id}" class="btn btn-sm btn-info">צפייה</a>
                  <button class="btn btn-sm btn-success" onclick="addToCart('${data.product._id}')">הוסף לסל</button>
                </div>
              </div>
            </div>`;
          chatBox.innerHTML += card;
          scrollToBottom();
          sessionStorage.setItem("chatHistory", chatBox.innerHTML);
        } else {
          await addTypingEffect(data.answer || "לא מצאתי מוצר מתאים.");
        }
      } catch (error) {
        typingIndicator.classList.add("d-none");
        addMessage("ai", "שגיאה, נסה שוב מאוחר יותר.");
      }
    };

    function addToCart(productId) {
  fetch(`/cart/add/${productId}`)
    .then(() => alert("✅ נוסף לסל!"))
    .catch(() => alert("❌ שגיאה בהוספה לסל"));
}


    sendBtn.addEventListener("click", sendMessage);
    inputField.addEventListener("keydown", e => {
      if (e.key === "Enter") {
        e.preventDefault();
        sendMessage();
      }
    });

    chatBtn.addEventListener("click", () => {
      chatOpen = !chatOpen;
      chatWidget.classList.toggle("d-none", !chatOpen);
    });

    closeBtn.addEventListener("click", () => {
      chatOpen = false;
      chatWidget.classList.add("d-none");
    });

    if ('webkitSpeechRecognition' in window) {
      const recognition = new webkitSpeechRecognition();
      recognition.lang = 'he-IL';
      recognition.continuous = false;

      voiceBtn.addEventListener("click", () => {
        recognition.start();
        voiceBtn.classList.add("text-danger");
      });

      recognition.onresult = (event) => {
        const transcript = event.results[0][0].transcript;
        inputField.value = transcript;
        voiceBtn.classList.remove("text-danger");
        sendMessage();
      };

      recognition.onerror = () => {
        voiceBtn.classList.remove("text-danger");
      };
    } else {
      voiceBtn.disabled = true;
      voiceBtn.title = "הדפדפן שלך לא תומך בדיבור";
    }
  </script>

  <!-- Bootstrap JS -->
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
</body>
</html>
